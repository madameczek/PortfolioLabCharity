@model Charity.Mvc.Models.ViewModels.RegistrationViewModel
@{
    ViewData["Title"] = "Registration";
}

<header>
    @Html.PartialAsync("_MenuBar").Result
</header>

<section class="login-page">
    <h2>Załóż konto</h2>
    <form asp-action="Registration" method="post">
        <div class="text-danger">
        @{
            var errors = ViewData.ModelState.Where(n => n.Value.Errors.Count() > 0).ToList();
            if (errors != null)
            {
                errors.ForEach(e => e.Value.Errors.ToList().ForEach(i=>i.ErrorMessage.ToString()));
            }
        }
        </div>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <input asp-for="Name" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input asp-for="Surname" />
            <span asp-validation-for="Surname" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input asp-for="Email" type="email" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input asp-for="Password" type="password" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input asp-for="RepeatPassword" type="password" />
            <span asp-validation-for="RepeatPassword" class="text-danger"></span>
        </div>

        <div class="form-group form-group--buttons">
            <a asp-action="Login" class="btn btn--without-border">Zaloguj się</a>
            <button class="btn" type="submit">Załóż konto</button>
        </div>
    </form>
</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("_BootstrapScriptsPartial");}
}